name: Build, Test and Package.

on:
  push:
    branches:
      - master

jobs:
  test_stage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake
        working-directory: ./src/hashtable-pbunic
        run: |
          pip install flake8
          python -m flake8 -v

      - name: Perform testing
        working-directory: ./src/hashtable-pbunic
        run: |
          pip install pytest pytest-cov pytest-unordered
          python -m pytest test_hash.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=hashtable --cov-report=xml --cov-report=html

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: ./src/hashtable-pbunic/junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}

  pkg_stage:
    runs-on: ubuntu-latest
    needs: test_stage
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Build package
        run: |
          pip install build
          python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

  installpkg_stage:
    runs-on: ubuntu-latest
    needs: pkg_stage
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip and install package
        run: |
          python -m pip install --upgrade pip
          pip install -i https://test.pypi.org/simple/ hashtable-pbunic==1.0.0
